
/* Drop Tables */

DROP TABLE IF EXISTS ANSWER_OF_USER;
DROP TABLE IF EXISTS DEPOSIT;
DROP TABLE IF EXISTS FIXED_DEPOSIT;
DROP TABLE IF EXISTS FIXED_DEPOSIT_ACCOUNT;
DROP TABLE IF EXISTS FOREIGN_CURRENCY_DEPOSIT;
DROP TABLE IF EXISTS FOREIGN_CURRENCY_DEPOSIT_ACCOUT;
DROP TABLE IF EXISTS FUND_ORDER;
DROP TABLE IF EXISTS FUND_ACCOUNT;
DROP TABLE IF EXISTS TRANSFER;
DROP TABLE IF EXISTS SAVINGS_ACCOUNT;
DROP TABLE IF EXISTS BRANCH;
DROP TABLE IF EXISTS BUSINESS_DAY;
DROP TABLE IF EXISTS BUYABLE_FUND_BY_RISK_ANSWER;
DROP TABLE IF EXISTS CREDNTIAL;
DROP TABLE IF EXISTS FUND_FEE_RATIO;
DROP TABLE IF EXISTS PROSPECTUS;
DROP TABLE IF EXISTS FUND;
DROP TABLE IF EXISTS FINANCIAL_INSTITUTION;
DROP TABLE IF EXISTS RISK_ANSWER;
DROP TABLE IF EXISTS RISK_QUESTION;
DROP TABLE IF EXISTS USR;




/* Create Tables */

CREATE TABLE ANSWER_OF_USER
(
	QUESTION_ID varchar(4) NOT NULL,
	ANSWER_ID varchar(4) NOT NULL,
	USER_ID varchar(8) NOT NULL,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (QUESTION_ID, ANSWER_ID, USER_ID)
) WITHOUT OIDS;


CREATE TABLE BRANCH
(
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	BRANCH_NAME varchar(512),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (FINANCIAL_CODE, BRANCH_ID)
) WITHOUT OIDS;


CREATE TABLE BUSINESS_DAY
(
	YYYYMMDD varchar(8) NOT NULL,
	IS_BUSINESS_DAY boolean,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	PRIMARY KEY (YYYYMMDD)
) WITHOUT OIDS;


CREATE TABLE BUYABLE_FUND_BY_RISK_ANSWER
(
	QUESTION_ID varchar(4) NOT NULL,
	ANSWER_ID varchar(4) NOT NULL,
	FUND_ID varchar(8) NOT NULL,
	CAN_BY boolean,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (QUESTION_ID, ANSWER_ID, FUND_ID)
) WITHOUT OIDS;


CREATE TABLE CREDNTIAL
(
	USER_ID varchar(8) NOT NULL,
	CREDENTIAL_KEY_TYPE varchar(50),
	CREDENTIAL_KEY varchar(50),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (USER_ID, CREDENTIAL_KEY_TYPE)
) WITHOUT OIDS;


CREATE TABLE DEPOSIT
(
	TRADE_ID varchar(128) NOT NULL UNIQUE,
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	BALANCE decimal,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (TRADE_ID, USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE FINANCIAL_INSTITUTION
(
	FINANCIAL_CODE varchar(4) NOT NULL,
	FINANCIAL_INSTITUTION_NAME varchar(512),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	PRIMARY KEY (FINANCIAL_CODE)
) WITHOUT OIDS;


CREATE TABLE FIXED_DEPOSIT
(
	TRADE_ID varchar(128) NOT NULL UNIQUE,
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	FIXED_ACCOUNT_NO varchar(7) NOT NULL,
	TRADE_START_DATE timestamp(29),
	MATURITY_DAY varchar(8),
	BALANCE decimal,
	RATIO decimal,
	LAST_UPDATED_AT timestamp(29),
	VER int
) WITHOUT OIDS;


CREATE TABLE FIXED_DEPOSIT_ACCOUNT
(
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	CIF_NO varchar(7),
	FIXED_ACCOUNT_NO varchar(7) NOT NULL,
	ACCOUNT_TYPE varchar(50),
	ACCOUNT_START_DATE timestamp(29),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FIXED_ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE FOREIGN_CURRENCY_DEPOSIT
(
	TRADE_ID varchar(128) NOT NULL UNIQUE,
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	FOREIGN_CURRENCY_ACCOUNT_NO varchar(7) NOT NULL,
	BALANCE decimal,
	TRADE_START_DATE timestamp(29),
	MATURITY_DAY varchar(8),
	RATIO decimal,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (TRADE_ID, USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FOREIGN_CURRENCY_ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE FOREIGN_CURRENCY_DEPOSIT_ACCOUT
(
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	CIF_NO varchar(7),
	FOREIGN_CURRENCY_ACCOUNT_NO varchar(7) NOT NULL,
	ACCOUNT_TYPE varchar(50),
	CURRENCY varchar(50),
	ACCOUNT_START_DATE timestamp(29),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FOREIGN_CURRENCY_ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE FUND
(
	FUND_ID varchar(8) NOT NULL,
	FUND_NAME varchar(512),
	TRADE_START_DAY varchar(8),
	FINANCIAL_CODE varchar(4) NOT NULL,
	TRADE_START_DATE timestamp(29),
	MATURITY_DAY varchar(8),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	PRIMARY KEY (FUND_ID)
) WITHOUT OIDS;


CREATE TABLE FUND_ACCOUNT
(
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	FUND_ACCOUNT_NO varchar(7) NOT NULL,
	ACCOUNT_TYPE varchar(50),
	ACCOUNT_START_DATE timestamp(29),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FUND_ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE FUND_FEE_RATIO
(
	FUND_ID varchar(8) NOT NULL,
	VALID_START_DAY varchar(8),
	FEE_RATIO decimal,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (FUND_ID, VALID_START_DAY)
) WITHOUT OIDS;


CREATE TABLE FUND_ORDER
(
	TRADE_ID varchar(128) UNIQUE,
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	FUND_ACCOUNT_NO varchar(7) NOT NULL,
	FUND_ID varchar(8) NOT NULL,
	AMOUNT decimal,
	TRADE_START_DATE timestamp(29),
	LAST_UPDATED_AT timestamp(29)
) WITHOUT OIDS;


CREATE TABLE PROSPECTUS
(
	FUND_ID varchar(8) NOT NULL,
	PROSPECTUS_NO int,
	FILE_PATH varchar(512),
	IS_VALID boolean,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (FUND_ID, PROSPECTUS_NO)
) WITHOUT OIDS;


CREATE TABLE RISK_ANSWER
(
	QUESTION_ID varchar(4) NOT NULL,
	ANSWER_ID varchar(4),
	ANSWER varchar(1024),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (QUESTION_ID, ANSWER_ID)
) WITHOUT OIDS;


CREATE TABLE RISK_QUESTION
(
	QUESTION_ID varchar(4) NOT NULL,
	QUESTION varchar(1024),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	PRIMARY KEY (QUESTION_ID)
) WITHOUT OIDS;


CREATE TABLE SAVINGS_ACCOUNT
(
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	CIF_NO varchar(7),
	ACCOUNT_NO varchar(7) NOT NULL,
	ACCOUNT_TYPE varchar(50),
	TOTAL_AMOUNT decimal,
	ACCOUNT_START_DATE timestamp(29),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE TRANSFER
(
	TRADE_ID varchar(128) NOT NULL UNIQUE,
	USER_ID varchar(8) NOT NULL,
	FINANCIAL_CODE varchar(4) NOT NULL,
	BRANCH_ID varchar(6) NOT NULL,
	ACCOUNT_NO varchar(7) NOT NULL,
	AMOUNT decimal,
	TRANSFER_TRADE_DAY varchar(8),
	FEE decimal,
	LAST_UPDATED_AT timestamp(29),
	VER int,
	UNIQUE (TRADE_ID, USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
) WITHOUT OIDS;


CREATE TABLE USR
(
	USER_ID varchar(8) NOT NULL,
	FIRST_NAME varchar(50),
	LAST_NAME varchar(50),
	LOGIN_ID varchar(32) UNIQUE,
	BIRTHDAY varchar(8),
	SEX varchar(50),
	LAST_UPDATED_AT timestamp(29),
	VER int,
	PRIMARY KEY (USER_ID)
) WITHOUT OIDS;



/* Create Foreign Keys */

ALTER TABLE SAVINGS_ACCOUNT
	ADD FOREIGN KEY (FINANCIAL_CODE, BRANCH_ID)
	REFERENCES BRANCH (FINANCIAL_CODE, BRANCH_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BRANCH
	ADD FOREIGN KEY (FINANCIAL_CODE)
	REFERENCES FINANCIAL_INSTITUTION (FINANCIAL_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FUND
	ADD FOREIGN KEY (FINANCIAL_CODE)
	REFERENCES FINANCIAL_INSTITUTION (FINANCIAL_CODE)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FIXED_DEPOSIT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FIXED_ACCOUNT_NO)
	REFERENCES FIXED_DEPOSIT_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FIXED_ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FOREIGN_CURRENCY_DEPOSIT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FOREIGN_CURRENCY_ACCOUNT_NO)
	REFERENCES FOREIGN_CURRENCY_DEPOSIT_ACCOUT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FOREIGN_CURRENCY_ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BUYABLE_FUND_BY_RISK_ANSWER
	ADD FOREIGN KEY (FUND_ID)
	REFERENCES FUND (FUND_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FUND_FEE_RATIO
	ADD FOREIGN KEY (FUND_ID)
	REFERENCES FUND (FUND_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FUND_ORDER
	ADD FOREIGN KEY (FUND_ID)
	REFERENCES FUND (FUND_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE PROSPECTUS
	ADD FOREIGN KEY (FUND_ID)
	REFERENCES FUND (FUND_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FUND_ORDER
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FUND_ACCOUNT_NO)
	REFERENCES FUND_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO, FUND_ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ANSWER_OF_USER
	ADD FOREIGN KEY (QUESTION_ID, ANSWER_ID)
	REFERENCES RISK_ANSWER (QUESTION_ID, ANSWER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE BUYABLE_FUND_BY_RISK_ANSWER
	ADD FOREIGN KEY (QUESTION_ID, ANSWER_ID)
	REFERENCES RISK_ANSWER (QUESTION_ID, ANSWER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RISK_ANSWER
	ADD FOREIGN KEY (QUESTION_ID)
	REFERENCES RISK_QUESTION (QUESTION_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE DEPOSIT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	REFERENCES SAVINGS_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FIXED_DEPOSIT_ACCOUNT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	REFERENCES SAVINGS_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FOREIGN_CURRENCY_DEPOSIT_ACCOUT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	REFERENCES SAVINGS_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FUND_ACCOUNT
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	REFERENCES SAVINGS_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE TRANSFER
	ADD FOREIGN KEY (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	REFERENCES SAVINGS_ACCOUNT (USER_ID, FINANCIAL_CODE, BRANCH_ID, ACCOUNT_NO)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE ANSWER_OF_USER
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USR (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CREDNTIAL
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USR (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE SAVINGS_ACCOUNT
	ADD FOREIGN KEY (USER_ID)
	REFERENCES USR (USER_ID)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



